#ifndef HD44780
#define HD44780



// Очистка экрана. Счетчик адреса на 0 позицию DDRAM
enum CLEAR_DISPLAY {
    CLEAR = 0x01
};

// Адресация на DDRAM сброс сдвигов, Счетчик адреса на 0
enum RETURN_HOME {
    RETURN = 0x02
};

// Настройка сдвига экрана и курсора
enum ENTRY_MODE_SET {
    I_D_SET = 0x04, // I/D — инкремент или декремент счетчика адреса. По дефолту стоит 0 — Декремент.
                    // Т.е. каждый следующий байт будет записан в n-1 ячейку. 1 — Инкремент.
    S_SET   = 0x05  // S - сдвиг экрана, если поставить 1 то с каждым новым символом будет сдвигаться
                    // окно экрана, пока не достигнет конца DDRAM, наверное удобно будет когда выводишь
                    // на экран здоровенную строку, на все 40 символов, чтобы не убегала за экран.
};

// Настройка режима отображения
enum DISPLAY_ON_OFF_CONTROL {
    D_SET   = 0x0C, // D — включить дисплей. Если поставить туда 0 то изображение исчезнет, а мы в это
                    // время можем в видеопамяти творить всякие непотребства и они не будут мозолить
                    // глаза. А чтобы картинка появилась в эту позицию надо записать 1.
    C_SET   = 0x0A, // С - включить курсор в виде прочерка. 1 — включился курсор.
    B_SET   = 0x09  // B — сделать курсор в виде мигающего черного квадрата.
};

// Сдвиг курсора или экрана, в зависимости от битов
enum CURSOR_OR_DISPLAY_SHIFT {
    S_C_SET = 0x18, // S/C сдвиг курсора или экрана. Если стоит 0, то сдвигается курсор.
                    // Если 1, то экран. По одному разу за команду.
    R_L_SET = 0x14  // R/L — определяет направление сдвига курсора и экрана. 0 — влево, 1 — вправо.
};

// Выбор числа линий, ширины шины и размера символа
enum FUNCTION_SET {
    DL_SET  = 0x30, // D/L — бит определяющий ширину шины данных. 1-8 бит, 0-4 бита
    N_SET   = 0x28, // N — число строк. 0 — одна строка, 1 — две строки.
    F_SET   = 0x24  // F - размер символа 0 — 5х8 точек. 1 — 5х10 точек (встречается крайне редко)
};

// Переключить адресацию на SGRAM и задать адрес в SGRAM
enum CGRAM_ADDRESS {
    CGRAM_ADDRESS_SET   = 0x40
};

// Переключить адресацию на DDRAM и задать адрес в DDRAM
enum DDRAM_ADDRESS {
    DDRAM_ADDRESS_SET   = 0x80
};



// HD44780 Init command
//------------------------------------------------------
void HD44780_CMD(uint8_t command);
// HD44780 Write Byte
//------------------------------------------------------
void HD44780_Write_Byte(uint8_t data);

// HD44780 Cursor Position
//------------------------------------------------------
void HD44780_Cursor_Position(uint8_t position);

#endif // HD44780

